{"mineWoodLog": {"code": "async function mineWoodLog(bot) {\n  const logNames = [\"oak_log\", \"birch_log\", \"spruce_log\", \"jungle_log\", \"acacia_log\", \"dark_oak_log\", \"mangrove_log\"];\n\n  // Find a wood log block\n  const logBlock = await exploreUntil(bot, new Vec3(1, 0, 1), 60, () => {\n    return bot.findBlock({\n      matching: block => logNames.includes(block.name),\n      maxDistance: 32\n    });\n  });\n  if (logBlock) {\n    // Mine the wood log block\n    await mineBlock(bot, logBlock.name);\n    bot.chat(\"Wood log mined.\");\n  } else {\n    bot.chat(\"Could not find a wood log.\");\n  }\n}", "description": "async function mineWoodLog(bot) {\n    // The function mines a wood log by exploring the environment to find a log block from various tree types. Once a log block is found, it mines the wood log and notifies that the wood log has been mined. If no log block is found, it indicates that a wood log could not be found.\n}"}, "mineCoalOre": {"code": "async function mineCoalOre(bot) {\n  // Check if the bot has a wooden_pickaxe in the inventory\n  const woodenPickaxe = bot.inventory.findInventoryItem(mcData.itemsByName.wooden_pickaxe.id);\n\n  // If the bot doesn't have a wooden_pickaxe, craft one\n  if (!woodenPickaxe) {\n    // Place a crafting table\n    const craftingTablePosition = bot.entity.position.offset(1, 0, 0);\n    await placeItem(bot, \"crafting_table\", craftingTablePosition);\n\n    // Craft a wooden_pickaxe\n    await craftItem(bot, \"wooden_pickaxe\");\n  }\n\n  // Find a coal_ore block nearby\n  let coalOre = bot.findBlock({\n    matching: mcData.blocksByName[\"coal_ore\"].id,\n    maxDistance: 32\n  });\n\n  // If no coal_ore block is found, explore the surroundings to find one\n  if (!coalOre) {\n    coalOre = await exploreUntil(bot, new Vec3(1, 0, 1), 60, () => {\n      return bot.findBlock({\n        matching: mcData.blocksByName[\"coal_ore\"].id,\n        maxDistance: 32\n      });\n    });\n  }\n\n  // Equip the wooden_pickaxe and mine the coal_ore block\n  await bot.equip(mcData.itemsByName.wooden_pickaxe.id, \"hand\");\n  await mineBlock(bot, \"coal_ore\");\n\n  // Report the completion of the task\n  bot.chat(\"Task completed: Mined 1 coal ore.\");\n}", "description": "async function mineCoalOre(bot) {\n    // The function is about mining 1 coal ore using a wooden pickaxe. First, it checks if a wooden pickaxe is in the inventory, and if not, it crafts one using a crafting table. It then searches for a nearby coal ore block and, if not found, explores the surroundings until one is located. Once a coal ore block is discovered, the wooden pickaxe is equipped in hand and the coal ore block is mined. Finally, the task completion is reported.\n}"}, "mineAndSmeltIron": {"code": "async function mineAndSmeltIron(bot) {\n  // Find 3 iron_ore blocks nearby or explore the surroundings to find them\n  const ironOres = bot.findBlocks({\n    matching: mcData.blocksByName[\"iron_ore\"].id,\n    maxDistance: 32,\n    count: 3\n  });\n  if (ironOres.length < 3) {\n    await exploreUntil(bot, new Vec3(1, 0, 1), 60, () => {\n      const foundIronOres = bot.findBlocks({\n        matching: mcData.blocksByName[\"iron_ore\"].id,\n        maxDistance: 32,\n        count: 3\n      });\n      return foundIronOres.length >= 3;\n    });\n  }\n\n  // Mine the 3 iron_ore blocks using the stone_pickaxe\n  await mineBlock(bot, \"iron_ore\", 3);\n\n  // Place a furnace\n  const furnacePosition = bot.entity.position.offset(1, 0, 0);\n  await placeItem(bot, \"furnace\", furnacePosition);\n\n  // Smelt the 3 raw_iron into 3 iron_ingots using coal as fuel\n  await smeltItem(bot, \"raw_iron\", \"coal\", 3);\n\n  // Report the completion of the task\n  bot.chat(\"Task completed: Mined and smelted 3 iron ingots.\");\n}", "description": "async function mineAndSmeltIron(bot) {\n    // The function mines 3 iron ores and smelts them into iron ingots. It first finds 3 iron ores nearby or explores the surroundings to locate them. Once found, it mines the iron ores using a stone pickaxe. Next, it places a furnace and smelts the raw iron into iron ingots using coal as fuel. Finally, it reports the completion of the task.\n}"}, "smeltIronOres": {"code": "async function smeltIronOres(bot) {\n  // Check if there is enough coal in the inventory. If not, mine a coal_ore block.\n  const coalCount = bot.inventory.count(mcData.itemsByName.coal.id);\n  if (coalCount < 1) {\n    await mineBlock(bot, \"coal_ore\");\n  }\n\n  // Find a suitable position to place the furnace\n  const furnacePosition = bot.entity.position.offset(1, 0, 0);\n\n  // Place the furnace\n  await placeItem(bot, \"furnace\", furnacePosition);\n\n  // Smelt the 3 iron ores using coal as fuel\n  await smeltItem(bot, \"raw_iron\", \"coal\", 3);\n\n  // Report the completion of the task\n  bot.chat(\"Task completed: Smelted 3 iron ores into iron ingots.\");\n}", "description": "async function smeltIronOres(bot) {\n    // The function is about smelting 3 iron ores into iron ingots using a furnace. First, check if there is enough coal in the inventory, and if not, mine a coal_ore block. Then, find a suitable position to place the furnace and place it. Next, smelt the 3 iron ores using coal as fuel. Finally, report the completion of the task.\n}"}, "smeltCopperOre": {"code": "async function smeltCopperOre(bot) {\n  // Check if there is enough coal in the inventory. If not, mine a coal_ore block.\n  const coalCount = bot.inventory.count(mcData.itemsByName.coal.id);\n  if (coalCount < 1) {\n    await mineBlock(bot, \"coal_ore\");\n  }\n\n  // Mine a copper_ore block\n  await mineBlock(bot, \"copper_ore\");\n\n  // Find a suitable position to place the furnace\n  const furnacePosition = bot.entity.position.offset(1, 0, 0);\n\n  // Place the furnace\n  await placeItem(bot, \"furnace\", furnacePosition);\n\n  // Smelt the copper ore using coal as fuel\n  await smeltItem(bot, \"copper_ore\", \"coal\");\n\n  // Report the completion of the task\n  bot.chat(\"Task completed: Smelted 1 copper ore into a copper ingot.\");\n}", "description": "async function smeltCopperOre(bot) {\n    // The function is about smelting a copper ore into a copper ingot. First, check if there is enough coal in the inventory, and if not, mine a coal_ore block. Then, mine a copper_ore block. Find a suitable position to place the furnace and place it. Smelt the copper ore using coal as fuel. Finally, report the completion of the task.\n}"}, "craftFurnace": {"code": "async function craftFurnace(bot) {\n  // Check if the bot has a furnace in its inventory\n  const furnaceCount = bot.inventory.count(mcData.itemsByName.furnace.id);\n  if (furnaceCount > 0) {\n    bot.chat(\"Task completed: Already have a furnace in the inventory.\");\n    return;\n  }\n\n  // Mine 8 cobblestone blocks if not enough in the inventory\n  const cobblestoneCount = bot.inventory.count(mcData.itemsByName.cobblestone.id);\n  if (cobblestoneCount < 8) {\n    await mineBlock(bot, \"stone\", 8 - cobblestoneCount);\n  }\n\n  // Place a crafting table if not already placed\n  const craftingTable = bot.findBlock({\n    matching: mcData.blocksByName.crafting_table.id,\n    maxDistance: 32\n  });\n  if (!craftingTable) {\n    const craftingTablePosition = bot.entity.position.offset(1, 0, 0);\n    await placeItem(bot, \"crafting_table\", craftingTablePosition);\n  }\n\n  // Craft the furnace using 8 cobblestone blocks\n  await craftItem(bot, \"furnace\");\n\n  // Report the completion of the task\n  bot.chat(\"Task completed: Crafted a furnace.\");\n}", "description": "async function craftFurnace(bot) {\n    // The function is about crafting a furnace. First, check if there's a furnace in the inventory. If not, mine enough cobblestone blocks to have at least 8. Then, place a crafting table if one isn't already nearby. Next, craft the furnace using 8 cobblestone blocks. Finally, report the successful completion of the task.\n}"}, "smeltThreeIronOres": {"code": "async function smeltThreeIronOres(bot) {\n  // Check if there are 3 iron ores in the inventory\n  const ironOreCount = bot.inventory.count(mcData.itemsByName.raw_iron.id);\n  if (ironOreCount < 3) {\n    await mineBlock(bot, \"iron_ore\", 3 - ironOreCount);\n  }\n\n  // Check if there is a furnace in the inventory\n  const furnaceCount = bot.inventory.count(mcData.itemsByName.furnace.id);\n  if (furnaceCount < 1) {\n    await craftItem(bot, \"furnace\");\n  }\n\n  // Place the furnace\n  const furnacePosition = bot.entity.position.offset(1, 0, 0);\n  await placeItem(bot, \"furnace\", furnacePosition);\n\n  // Check if there is enough coal in the inventory\n  const coalCount = bot.inventory.count(mcData.itemsByName.coal.id);\n  if (coalCount < 1) {\n    await mineBlock(bot, \"coal_ore\");\n  }\n\n  // Smelt the 3 iron ores using the furnace and coal as fuel\n  await smeltItem(bot, \"raw_iron\", \"coal\", 3);\n\n  // Report the completion of the task\n  bot.chat(\"Task completed: Smelted 3 iron ores into iron ingots.\");\n}", "description": "async function smeltThreeIronOres(bot) {\n    // The function is about smelting three iron ores into iron ingots. First, check if there are enough iron ores in the inventory, if not, mine the required amount. Next, check for a furnace and craft one if needed, then place it nearby. Ensure there is enough coal in the inventory, mining more if necessary. Finally, smelt the three iron ores using the furnace and coal as fuel, and notify the completion of the task.\n}"}, "ensureIronChestplate": {"code": "async function ensureIronChestplate(bot) {\n  // Check if the bot already has an iron chestplate in its inventory\n  const ironChestplateCount = bot.inventory.count(mcData.itemsByName.iron_chestplate.id);\n  if (ironChestplateCount > 0) {\n    bot.chat(\"Task completed: Already have an iron chestplate in the inventory.\");\n    return;\n  }\n\n  // Craft an iron chestplate\n  await craftIronChestplate(bot);\n}", "description": "async function ensureIronChestplate(bot) {\n    // The function ensures the presence of an iron chestplate in the inventory. It checks if there is already an iron chestplate in the inventory. If not, it proceeds to craft one.\n}"}, "equipIronChestplate": {"code": "async function equipIronChestplate(bot) {\n  // Check if the bot has an iron chestplate in its inventory\n  const ironChestplate = bot.inventory.findInventoryItem(mcData.itemsByName.iron_chestplate.id);\n  if (ironChestplate) {\n    // Equip the iron chestplate\n    await bot.equip(ironChestplate, \"torso\");\n    bot.chat(\"Task completed: Equipped iron chestplate.\");\n  } else {\n    bot.chat(\"Task failed: No iron chestplate in inventory.\");\n  }\n}", "description": "async function equipIronChestplate(bot) {\n    // The function checks if the bot has an iron chestplate in its inventory. If it does, the iron chestplate is equipped on the torso. If not, an appropriate message is displayed indicating the absence of the iron chestplate in the inventory.\n}"}, "reportIronLeggingsCrafted": {"code": "async function reportIronLeggingsCrafted(bot) {\n  bot.chat(\"Task already completed: Crafted iron leggings.\");\n}", "description": "async function reportIronLeggingsCrafted(bot) {\n    // The function informs the user that the task of crafting iron leggings has already been completed.\n}"}, "equipIronLeggings": {"code": "async function equipIronLeggings(bot) {\n  // Check if the bot has iron leggings in its inventory\n  const ironLeggings = bot.inventory.findInventoryItem(mcData.itemsByName.iron_leggings.id);\n  if (ironLeggings) {\n    // Equip the iron leggings\n    await bot.equip(ironLeggings, \"legs\");\n    bot.chat(\"Task completed: Equipped iron leggings.\");\n  } else {\n    bot.chat(\"Task failed: No iron leggings in inventory.\");\n  }\n}", "description": "async function equipIronLeggings(bot) {\n    // The function checks if the bot has iron leggings in its inventory, and if so, equips them; otherwise, it informs that there are no iron leggings in the inventory.\n}"}, "craftIronPickaxe": {"code": "async function craftIronPickaxe(bot) {\n  // Check if there is enough coal in the inventory. If not, mine a coal_ore block.\n  const coalCount = bot.inventory.count(mcData.itemsByName.coal.id);\n  if (coalCount < 1) {\n    await mineBlock(bot, \"coal_ore\");\n  }\n\n  // Check if there are enough iron ingots in the inventory\n  const ironIngotCount = bot.inventory.count(mcData.itemsByName.iron_ingot.id);\n  if (ironIngotCount < 3) {\n    // Place a furnace if not already placed\n    const furnace = bot.findBlock({\n      matching: mcData.blocksByName.furnace.id,\n      maxDistance: 32\n    });\n    if (!furnace) {\n      const furnacePosition = bot.entity.position.offset(1, 0, 0);\n      await placeItem(bot, \"furnace\", furnacePosition);\n    }\n    // Smelt raw_iron to get more iron ingots\n    await smeltItem(bot, \"raw_iron\", \"coal\", 3 - ironIngotCount);\n  }\n\n  // Check if there are enough sticks in the inventory\n  const stickCount = bot.inventory.count(mcData.itemsByName.stick.id);\n  if (stickCount < 2) {\n    // Craft sticks using spruce_planks\n    await craftItem(bot, \"stick\", 1);\n  }\n\n  // Place a crafting table if not already placed\n  const craftingTable = bot.findBlock({\n    matching: mcData.blocksByName.crafting_table.id,\n    maxDistance: 32\n  });\n  if (!craftingTable) {\n    const craftingTablePosition = bot.entity.position.offset(1, 0, 0);\n    await placeItem(bot, \"crafting_table\", craftingTablePosition);\n  }\n\n  // Craft the iron pickaxe using 3 iron ingots and 2 sticks\n  await craftItem(bot, \"iron_pickaxe\");\n\n  // Report the completion of the task\n  bot.chat(\"Task completed: Crafted an iron pickaxe.\");\n}", "description": "async function craftIronPickaxe(bot) {\n    // The function is about crafting an iron pickaxe. First, ensure there is enough coal and iron ingots in the inventory, mining and smelting if necessary. Next, check for enough sticks, and craft more if required. Then, place a crafting table if not already placed. Finally, craft the iron pickaxe using 3 iron ingots and 2 sticks.\n}"}, "smeltSixRawIron": {"code": "async function smeltSixRawIron(bot) {\n  // Find a suitable position to place the furnace\n  const furnacePosition = bot.entity.position.offset(1, 0, 0);\n\n  // Place the furnace\n  await placeItem(bot, \"furnace\", furnacePosition);\n\n  // Check if there is enough coal in the inventory. If not, mine a coal_ore block.\n  const coalCount = bot.inventory.count(mcData.itemsByName.coal.id);\n  if (coalCount < 1) {\n    await mineBlock(bot, \"coal_ore\");\n  }\n\n  // Smelt the 6 raw iron using coal as fuel\n  await smeltItem(bot, \"raw_iron\", \"coal\", 6);\n\n  // Report the completion of the task\n  bot.chat(\"Task completed: Smelted 6 raw iron into iron ingots.\");\n}", "description": "async function smeltSixRawIron(bot) {\n    // The function is about smelting 6 raw iron into iron ingots using a furnace. First, find a suitable position to place the furnace and place it. Check if there is enough coal in the inventory, and if not, mine a coal_ore block. Then, smelt the 6 raw iron using coal as fuel. Finally, report the completion of the task.\n}"}, "craftIronHelmet": {"code": "async function craftIronHelmet(bot) {\n  // Check if there is a crafting table nearby\n  const craftingTable = bot.findBlock({\n    matching: mcData.blocksByName.crafting_table.id,\n    maxDistance: 32\n  });\n\n  // Place a crafting table if not already placed\n  if (!craftingTable) {\n    const craftingTableCount = bot.inventory.count(mcData.itemsByName.crafting_table.id);\n    if (craftingTableCount < 1) {\n      // Craft a crafting table using spruce_planks\n      await craftItem(bot, \"crafting_table\");\n    }\n    const craftingTablePosition = bot.entity.position.offset(1, 0, 0);\n    await placeItem(bot, \"crafting_table\", craftingTablePosition);\n  }\n\n  // Craft the iron helmet using 5 iron ingots\n  await craftItem(bot, \"iron_helmet\");\n\n  // Report the completion of the task\n  bot.chat(\"Task completed: Crafted an iron helmet.\");\n}", "description": "async function craftIronHelmet(bot) {\n    // The function is about crafting an iron helmet. First, it checks if there is a crafting table nearby. If not, it places a crafting table using the available inventory. Then, it crafts the iron helmet using 5 iron ingots. Finally, it reports the completion of the task.\n}"}, "equipIronHelmet": {"code": "async function equipIronHelmet(bot) {\n  // Check if the bot has an iron helmet in its inventory\n  const ironHelmet = bot.inventory.findInventoryItem(mcData.itemsByName.iron_helmet.id);\n  if (ironHelmet) {\n    // Equip the iron helmet\n    await bot.equip(ironHelmet, \"head\");\n    bot.chat(\"Task completed: Equipped iron helmet.\");\n  } else {\n    bot.chat(\"Task failed: No iron helmet in inventory.\");\n  }\n}", "description": "async function equipIronHelmet(bot) {\n    // The function checks if an iron helmet is present in the inventory. If found, it equips the iron helmet on the bot's head. If not found, it indicates the task has failed.\n}"}, "craftIronBoots": {"code": "async function craftIronBoots(bot) {\n  // Check if there are enough iron ingots in the inventory\n  const ironIngotCount = bot.inventory.count(mcData.itemsByName.iron_ingot.id);\n  if (ironIngotCount < 4) {\n    // Mine more iron_ore if needed\n    const ironOreCount = bot.inventory.count(mcData.itemsByName.raw_iron.id);\n    if (ironOreCount < 4) {\n      await mineBlock(bot, \"iron_ore\", 4 - ironOreCount);\n    }\n\n    // Check if there is enough coal in the inventory. If not, mine more coal_ore.\n    const coalCount = bot.inventory.count(mcData.itemsByName.coal.id);\n    if (coalCount < 1) {\n      await mineBlock(bot, \"coal_ore\");\n    }\n\n    // Place a furnace if not already placed\n    const furnace = bot.findBlock({\n      matching: mcData.blocksByName.furnace.id,\n      maxDistance: 32\n    });\n    if (!furnace) {\n      const furnacePosition = bot.entity.position.offset(1, 0, 0);\n      await placeItem(bot, \"furnace\", furnacePosition);\n    }\n\n    // Smelt raw_iron to get more iron ingots\n    await smeltItem(bot, \"raw_iron\", \"coal\", 4);\n  }\n\n  // Place a crafting table if not already placed\n  const craftingTable = bot.findBlock({\n    matching: mcData.blocksByName.crafting_table.id,\n    maxDistance: 32\n  });\n  if (!craftingTable) {\n    const craftingTablePosition = bot.entity.position.offset(1, 0, 0);\n    await placeItem(bot, \"crafting_table\", craftingTablePosition);\n  }\n\n  // Craft the iron boots using 4 iron ingots\n  await craftItem(bot, \"iron_boots\");\n\n  // Report the completion of the task\n  bot.chat(\"Task completed: Crafted iron boots.\");\n}", "description": "async function craftIronBoots(bot) {\n    // The function is about crafting iron boots. First, it checks if there are enough iron ingots in the inventory. If not, it mines iron ore and smelts it into iron ingots using coal. Then, it places a crafting table if not already placed. Finally, it crafts the iron boots using 4 iron ingots and reports the completion of the task.\n}"}, "mineFiveIronOres": {"code": "async function mineFiveIronOres(bot) {\n  // Find 5 iron_ore blocks nearby or explore the surroundings to find them\n  const ironOres = bot.findBlocks({\n    matching: mcData.blocksByName[\"iron_ore\"].id,\n    maxDistance: 32,\n    count: 5\n  });\n  if (ironOres.length < 5) {\n    await exploreUntil(bot, new Vec3(1, 0, 1), 60, () => {\n      const foundIronOres = bot.findBlocks({\n        matching: mcData.blocksByName[\"iron_ore\"].id,\n        maxDistance: 32,\n        count: 5\n      });\n      return foundIronOres.length >= 5;\n    });\n  }\n\n  // Mine the 5 iron_ore blocks using the stone_pickaxe or higher-tier pickaxe\n  await mineBlock(bot, \"iron_ore\", 5);\n\n  // Report the completion of the task\n  bot.chat(\"Task completed: Mined 5 iron ores.\");\n}", "description": "async function mineFiveIronOres(bot) {\n    // The function focuses on mining 5 iron ores using a stone pickaxe or higher-tier pickaxe. First, it searches for 5 iron ore blocks nearby or explores the surroundings to find them. If there are less than 5 iron ores nearby, it continues exploring until 5 iron ores are found. Once the iron ores are located, the function mines the 5 iron ore blocks. Finally, it reports the completion of the task by stating that 5 iron ores have been mined.\n}"}}